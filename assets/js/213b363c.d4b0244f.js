"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[697],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(r),d=o,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5666:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var n=r(3117),o=r(102),a=(r(7294),r(3905)),i=["components"],s={},c="Recipes",l={unversionedId:"recipes",id:"recipes",isDocsHomePage:!1,title:"Recipes",description:"Selectors Optimization",source:"@site/docs/recipes.mdx",sourceDirName:".",slug:"/recipes",permalink:"/elf/docs/recipes",editUrl:"https://github.com/ngneat/elf/docusaurus/edit/main/website/docs/recipes.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Registry",permalink:"/elf/docs/miscellaneous/registry"},next:{title:"FAQ",permalink:"/elf/docs/faq"}},p=[{value:"Selectors Optimization",id:"selectors-optimization",children:[],level:2},{value:"Reset Stores",id:"reset-stores",children:[],level:2}],u={toc:p};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"recipes"},"Recipes"),(0,a.kt)("h2",{id:"selectors-optimization"},"Selectors Optimization"),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Beware of premature optimizations"))),(0,a.kt)("p",null,"Imagine we have a ",(0,a.kt)("inlineCode",{parentName:"p"},"todos")," store and we subscribe to the following selectors twice, at two different places simultaneously:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todos.repository.ts"',title:'"todos.repository.ts"'},"export const todos$ = store.pipe(selectAll());\n\n// One component\nuseObservable(todos$) // React\ntodos$ | async // Angular\n\n// Second component\nuseObservable(todos$) // React\ntodos$ | async // Angular\n")),(0,a.kt)("p",null,"Due to the nature of observables, the ",(0,a.kt)("inlineCode",{parentName:"p"},"selectAll()")," operator will map over the entities twice, once for each subscription. We can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"shareReplay")," operator to optimize it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todos.repository.ts"',title:'"todos.repository.ts"'},"import { shareReplay } from 'rxjs/operators';\n\nexport const todos$ = store.pipe(selectAll(), shareReplay({ refCount: true }))\n")),(0,a.kt)("p",null,"With this change, the ",(0,a.kt)("inlineCode",{parentName:"p"},"selectAll")," operator will now share the result with every subscriber."),(0,a.kt)("h2",{id:"reset-stores"},"Reset Stores"),(0,a.kt)("p",null,"Resetting your stores can be useful when you want to clean the store's data upon user logout. We can combine the ",(0,a.kt)("inlineCode",{parentName:"p"},"registry")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"store.reset()")," to create a ",(0,a.kt)("inlineCode",{parentName:"p"},"resetStores")," function:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { getRegistry } from '@ngneat/elf';\n\nexport function resetStores() {\n  getRegistry().forEach(store => store.reset())\n}\n")))}m.isMDXComponent=!0}}]);